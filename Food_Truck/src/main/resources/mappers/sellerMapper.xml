<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.foodtruck.dao.SellerDAO">

	<!-- 푸드트럭 정보 -->
	<select id="getFoodTruck" resultMap="FoodTruckMap">
		select * from foodtruck where license_no=#{licenseNo}
	</select>
	
	<!-- 오늘의 주문 내역 리스트 -->
	<select id="getTodayOrderList" resultMap="SellerMap">
	
		SELECT ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, 
			   ORDERS.MEM_ID, LISTAGG(PROD_NAME, ',') WITHIN GROUP(ORDER BY ORD_NO) prodName, orders.payment
		FROM ORDERS, PRODUCT
		WHERE ORDERS.LICENSE_NO = PRODUCT.LICENSE_NO
		AND ORDERS.LICENSE_NO = #{licenseNo}
		AND TO_CHAR(ORD_DATE, 'YY/MM/DD') = TO_CHAR(SYSDATE, 'YY/MM/DD')
		GROUP BY ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, ORDERS.MEM_ID, orders.payment
 	
 	</select>
 	
 	<!-- 오늘의 배달주문 리스트 -->
 	<select id="getTodayDlvList" resultMap="SellerMap">
 		SELECT ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, 
			   ORDERS.MEM_ID, LISTAGG(PROD_NAME, ',') WITHIN GROUP(ORDER BY ORD_NO) prodName
		FROM ORDERS, PRODUCT
		WHERE ORDERS.LICENSE_NO = PRODUCT.LICENSE_NO
		AND ORDERS.LICENSE_NO = #{licenseNo}
		AND TO_CHAR(ORD_DATE, 'YY/MM/DD') = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND ORD_DLV_YN = 'Y'
		GROUP BY ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, ORDERS.MEM_ID
 	</select>
 	
 	<!-- 오늘의 주문 통계 -->
 	<select id="getTodayPayment" resultMap="SellerMap">
 		SELECT  DECODE(PAYMENT,'0','카드','1','현금',null,'총주문') payment, 
 				COUNT(*) count,
		  		TO_CHAR(SUM(SUM_PRICE), '999,999') sumprice,
		  		ROUND(RATIO_TO_REPORT(SUM(SUM_PRICE)) OVER(PARTITION BY GROUPING_ID(PAYMENT))*100) ratio
		FROM ORDERS
		WHERE TO_CHAR(ORD_DATE, 'YY/MM/DD') = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND LICENSE_NO=#{licenseNo}
		GROUP BY ROLLUP(PAYMENT)
 	</select>

	<!-- 주문 리스트 -->
	<select id="getOrderList" resultMap="SellerMap">

 		SELECT ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, 
			   ORDERS.MEM_ID, LISTAGG(PROD_NAME, ',') WITHIN GROUP(ORDER BY ORD_NO) prodName
		FROM ORDERS, PRODUCT
		WHERE ORDERS.LICENSE_NO = PRODUCT.LICENSE_NO
		AND ORDERS.LICENSE_NO = #{licenseNo}
		GROUP BY ORD_NO, ORD_NAME, ORD_TEL, ORD_REQ, ORD_DATE, ORD_RSV_DATE, ORD_DLV_YN, ORDERS.MEM_ID
 
	</select>
	
	<!-- 판매자 사업자번호 리스트 -->
	<select id="getLicense" resultMap="SellerMap">
		SELECT LICENSE.LICENSE_NO AS LICENSE_NO, F.FTRUCK_NAME ftruckName,
			   F.FTRUCK_INTRO ftruckIntro, F.FTRUCK_REG ftruckReg,
			   F.CATEGORY category, F.FTRUCK_GRADE ftruckGrade
		FROM MEMBER
		INNER JOIN LICENSE
		ON MEMBER.MEM_ID = LICENSE.MEM_ID
		INNER JOIN FOODTRUCK F
		ON F.LICENSE_NO = LICENSE.LICENSE_NO
 		WHERE MEMBER.MEM_ID=#{memberId} 
		AND LICENSE.APP_STAT='Y'
	
	
	</select>
	
	<select id="getFoodTruckList" resultMap="FoodTruckMap">
		select * from foodtruck where license_no = #{licenseNo}
	</select>
	
	
	<insert id="insertFoodTruck" parameterType="FoodTruckVO">
		INSERT INTO 
		FOODTRUCK(FTRUCK_NO, FTRUCK_NAME, FTRUCK_TEL, FTRUCK_ADDR, FTRUCK_ADDR2,
				  FTRUCK_INTRO, FTRUCK_DLV_YN, FTRUCK_RSV_YN, FTRUCK_STATE,
			 	  FTRUCK_IMG, CATEGORY, LICENSE_NO)
		VALUES(FOODTRUCK_SEQ.NEXTVAL, #{ftruckName}, #{ftruckTel}, 
			   #{ftruckAddr}, #{ftruckAddr2}, #{ftruckIntro}, #{ftruckDlvYn}, #{ftruckRsvYn},
			   #{ftruckState}, #{ftruckImg}, #{category}, #{licenseNo})
		
	</insert>
	
	<!-- 라이센스 번호 등록 -->
	<insert id="insertLicense" parameterType="LicenseVO">
		insert into license(license_no, mem_id, app_stat)
		values(#{licenseNo}, #{memId}, 'N') 
	</insert>
	
	
	<select id="getInfo" resultMap="LicenseMap">
		select * from license where mem_id='${memId}'
	</select>
	
	<select id="getSinquiryList" resultMap="InquiryMap">
		select ffft.* from
		(select fft.*from
		(select rownum as
		rnum, ft.*
		from (
		select
		* from qa_sc where qa_sc_stat='N' and license_no is not null order
		by QA_SC_NO asc)
		ft)fft
		where
		rownum<![CDATA[ < ]]>=#{pageNo}+9)ffft
		where rnum>=#{pageNo}
	</select>

	<select id="getSinquiryListcount" resultType="int">
		select count(*)from
		qa_sc where QA_SC_STAT='N' and LICENSE_NO is not null
	</select>
	
	<select id="getFoodtruckDtail" resultMap="FoodTruckMap">
	
	select * from foodtruck where license_No=#{licenseNo}
	</select>
	
	<select id="getProductList" resultMap="ProductMap">
		select * from product where license_no=#{licenseNo}
	</select>
	
	<resultMap type="com.foodtruck.vo.MInquiryVO" id="InquiryMap">
		<result column="QA_SC_NO" property="qaScNo" />
		<result column="MEM_ID" property="memId" />
		<result column="QA_SC_TITLE" property="qaScTitle" />
		<result column="QA_SC_CONTENT" property="qaScContent" />
		<result column="QA_SC_REG" property="qaScReg" />
		<result column="QA_SC_CATEGORY1" property="qaScCategory1" />
		<result column="QA_SC_CATEGORY2" property="qaScCategory2" />
		<result column="QA_SC_TEL" property="qaScTel" />
		<result column="QA_SC_STAT" property="qaScStat" />
		<result column="LICENSE_NO" property="licenseNo" />
	</resultMap>
	
	<resultMap type="SellerVO" id="SellerMap">
		<result column="ORD_NO" property="ordNo"/>
		<result column="ORD_NAME" property="ordName"/>
		<result column="ORD_TEL" property="ordTel"/>
		<result column="ORD_REQ" property="ordReq"/>
		<result column="ORD_DATE" property="ordDate"/>
		<result column="ORD_RSV_DATE" property="ordRsvDate"/>
		<result column="ORD_DLV_YN" property="ordDlyYn"/>
		<result column="MEM_ID" property="memId"/>
		<result column="LICENSE_NO" property="licenseNo"/>
		<result column="PROD_NAME" property="prodName"/>
		<result column="PAYMENT" property="payment"/>
	</resultMap>
	
	<resultMap type="LicenseVO" id="LicenseMap">
		<result column="LICENSE_NO" property="licenseNo" />
		<result column="MEM_ID" property="memId" />
		<result column="APP_STAT" property="appStat" />
	</resultMap>
	
	<resultMap type="FoodTruckVO" id="FoodTruckMap">
		<result column="FTRUCK_NO" property="ftruckNo" />
		<result column="FTRUCK_NAME" property="ftruckName" />
		<result column="FTRUCK_TEL" property="ftruckTel" />
		<result column="FTRUCK_ADDR" property="ftruckAddr" />
		<result column="FTRUCK_ADDR2" property="ftruckAddr2" />
		<result column="FTRUCK_INTRO" property="ftruckIntro" />
		<result column="FTRUCK_REG" property="ftruckReg" />
		<result column="FTRUCK_DLV_YN" property="ftruckDlvYn" />
		<result column="FTRUCK_RSV_YN" property="ftruckRsvYn" />
		<result column="FTRUCK_STATE" property="ftruckState" />
		<result column="FTRUCK_GRADE" property="ftruckGrade" />
		<result column="FTRUCK_IMG" property="ftruckImg" />
		<result column="LATITUDE" property="latitude" />
		<result column="LONGITUDE" property="longitude" />
		<result column="CATEGORY" property="category" />
		<result column="LICENSE_NO" property="licenseNo" />
	</resultMap>
	
	<resultMap type="ProductVO" id="ProductMap">
		<result column="PROD_NO" property="prodNo" />
		<result column="PROD_NAME" property="prodName" />
		<result column="PROD_CONTENT" property="prodContent" />
		<result column="PROD_IMG" property="prodImg" />
		<result column="PROD_PRICE" property="prodPrice" />
		<result column="LICENSE_NO" property="licenseNo" />
		<result column="FTRUCK_NO" property="ftruckNo" />
	</resultMap>
	
	
</mapper>